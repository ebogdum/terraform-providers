variable "comment" {
  description = "An optional comment about the public key"
  type        = string
  default     = null

  validation {
    condition     = var.comment == null || length(var.comment) > 0
    error_message = "resource_aws_cloudfront_public_key, comment must be a non-empty string when provided."
  }
}

variable "encoded_key" {
  description = "The encoded public key that you want to add to CloudFront to use with features like field-level encryption"
  type        = string

  validation {
    condition     = length(var.encoded_key) > 0
    error_message = "resource_aws_cloudfront_public_key, encoded_key is required and must be a non-empty string."
  }

  validation {
    condition     = can(regex("-----BEGIN PUBLIC KEY-----", var.encoded_key))
    error_message = "resource_aws_cloudfront_public_key, encoded_key must be a valid PEM-formatted public key."
  }

  validation {
    condition     = can(regex("-----END PUBLIC KEY-----", var.encoded_key))
    error_message = "resource_aws_cloudfront_public_key, encoded_key must be a complete PEM-formatted public key with proper ending."
  }
}

variable "name" {
  description = "The name for the public key. By default generated by Terraform"
  type        = string
  default     = null

  validation {
    condition     = var.name == null || length(var.name) > 0
    error_message = "resource_aws_cloudfront_public_key, name must be a non-empty string when provided."
  }

  validation {
    condition     = var.name == null || can(regex("^[a-zA-Z0-9._-]+$", var.name))
    error_message = "resource_aws_cloudfront_public_key, name can only contain alphanumeric characters, periods, underscores, and hyphens."
  }
}

variable "name_prefix" {
  description = "The name prefix for the public key. Conflicts with name"
  type        = string
  default     = null

  validation {
    condition     = var.name_prefix == null || length(var.name_prefix) > 0
    error_message = "resource_aws_cloudfront_public_key, name_prefix must be a non-empty string when provided."
  }

  validation {
    condition     = var.name_prefix == null || can(regex("^[a-zA-Z0-9._-]+$", var.name_prefix))
    error_message = "resource_aws_cloudfront_public_key, name_prefix can only contain alphanumeric characters, periods, underscores, and hyphens."
  }

  validation {
    condition     = !(var.name != null && var.name_prefix != null)
    error_message = "resource_aws_cloudfront_public_key, name_prefix conflicts with name. Only one can be specified."
  }
}