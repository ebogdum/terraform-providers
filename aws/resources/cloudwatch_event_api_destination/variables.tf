variable "region" {
  description = "Region where this resource will be managed. Defaults to the Region set in the provider configuration."
  type        = string
  default     = null
}

variable "name" {
  description = "The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_."
  type        = string

  validation {
    condition     = can(regex("^[a-zA-Z0-9._-]+$", var.name)) && length(var.name) <= 64 && length(var.name) > 0
    error_message = "resource_aws_cloudwatch_event_api_destination, name must be 1-64 characters consisting of numbers, lower/upper case letters, .,-,_."
  }
}

variable "description" {
  description = "The description of the new API Destination. Maximum of 512 characters."
  type        = string
  default     = null

  validation {
    condition     = var.description == null || length(var.description) <= 512
    error_message = "resource_aws_cloudwatch_event_api_destination, description must be maximum of 512 characters."
  }
}

variable "invocation_endpoint" {
  description = "URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include '*' as path parameters wildcards to be set from the Target HttpParameters."
  type        = string

  validation {
    condition     = can(regex("^https?://", var.invocation_endpoint))
    error_message = "resource_aws_cloudwatch_event_api_destination, invocation_endpoint must be a valid URL starting with http:// or https://."
  }
}

variable "http_method" {
  description = "Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc."
  type        = string

  validation {
    condition     = contains(["GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"], var.http_method)
    error_message = "resource_aws_cloudwatch_event_api_destination, http_method must be one of: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS."
  }
}

variable "invocation_rate_limit_per_second" {
  description = "Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300)."
  type        = number
  default     = 300

  validation {
    condition     = var.invocation_rate_limit_per_second > 0
    error_message = "resource_aws_cloudwatch_event_api_destination, invocation_rate_limit_per_second must be greater than 0."
  }
}

variable "connection_arn" {
  description = "ARN of the EventBridge Connection to use for the API Destination."
  type        = string

  validation {
    condition     = can(regex("^arn:aws[a-zA-Z-]*:events:[a-z0-9-]+:[0-9]{12}:connection/", var.connection_arn))
    error_message = "resource_aws_cloudwatch_event_api_destination, connection_arn must be a valid EventBridge Connection ARN."
  }
}