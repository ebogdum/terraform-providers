variable "region" {
  description = "Region where this resource will be managed. Defaults to the Region set in the provider configuration."
  type        = string
  default     = null
}

variable "role" {
  description = "ARN of IAM role that includes the permissions required to scan and add tags to the associated protected resource."
  type        = string

  validation {
    condition     = can(regex("^arn:aws:iam::[0-9]+:role/.+", var.role))
    error_message = "resource_aws_guardduty_malware_protection_plan, role must be a valid IAM role ARN."
  }
}

variable "protected_resource" {
  description = "Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource."
  type = object({
    s3_bucket = object({
      bucket_name     = string
      object_prefixes = optional(list(string))
    })
  })
}

variable "actions" {
  description = "Information about whether the tags will be added to the S3 object after scanning."
  type = object({
    tagging = object({
      status = string
    })
  })
  default = null

  validation {
    condition = var.actions == null ? true : (
      var.actions.tagging != null ? contains(["DISABLED", "ENABLED"], var.actions.tagging.status) : true
    )
    error_message = "resource_aws_guardduty_malware_protection_plan, actions.tagging.status must be either 'DISABLED' or 'ENABLED'."
  }
}

variable "tags" {
  description = "Key-value mapping of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level."
  type        = map(string)
  default     = {}
}