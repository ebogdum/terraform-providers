variable "region" {
  description = "Region where this resource will be managed. Defaults to the Region set in the provider configuration."
  type        = string
  default     = null
}

variable "name" {
  description = "The application name. By default generated by Terraform"
  type        = string
  default     = null
}

variable "name_prefix" {
  description = "The name of the Pinpoint application. Conflicts with name"
  type        = string
  default     = null

  validation {
    condition     = var.name == null || var.name_prefix == null
    error_message = "resource_aws_pinpoint_app, name_prefix and name cannot both be specified."
  }
}

variable "campaign_hook" {
  description = "Specifies settings for invoking an AWS Lambda function that customizes a segment for a campaign"
  type = object({
    lambda_function_name = optional(string)
    mode                 = string
    web_url              = optional(string)
  })
  default = null

  validation {
    condition = var.campaign_hook == null || (
      var.campaign_hook.lambda_function_name == null ||
      var.campaign_hook.web_url == null
    )
    error_message = "resource_aws_pinpoint_app, campaign_hook lambda_function_name and web_url cannot both be specified."
  }

  validation {
    condition = var.campaign_hook == null || (
      var.campaign_hook.lambda_function_name != null ||
      var.campaign_hook.web_url != null
    ) && contains(["DELIVERY", "FILTER"], var.campaign_hook.mode)
    error_message = "resource_aws_pinpoint_app, campaign_hook mode must be 'DELIVERY' or 'FILTER' when lambda_function_name or web_url are provided."
  }
}

variable "limits" {
  description = "The default campaign limits for the app. These limits apply to each campaign for the app, unless the campaign overrides the default with limits of its own"
  type = object({
    daily               = optional(number)
    maximum_duration    = optional(number)
    messages_per_second = optional(number)
    total               = optional(number)
  })
  default = null

  validation {
    condition     = var.limits == null || var.limits.maximum_duration == null || var.limits.maximum_duration >= 60
    error_message = "resource_aws_pinpoint_app, limits maximum_duration minimum value is 60."
  }

  validation {
    condition     = var.limits == null || var.limits.messages_per_second == null || (var.limits.messages_per_second >= 50 && var.limits.messages_per_second <= 20000)
    error_message = "resource_aws_pinpoint_app, limits messages_per_second minimum value is 50 and maximum is 20000."
  }
}

variable "quiet_time" {
  description = "The default quiet time for the app. Each campaign for this app sends no messages during this time unless the campaign overrides the default with a quiet time of its own"
  type = object({
    end   = optional(string)
    start = optional(string)
  })
  default = null

  validation {
    condition = var.quiet_time == null || (
      (var.quiet_time.start != null && var.quiet_time.end != null) ||
      (var.quiet_time.start == null && var.quiet_time.end == null)
    )
    error_message = "resource_aws_pinpoint_app, quiet_time start and end must both be set or both be null."
  }
}

variable "tags" {
  description = "Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level."
  type        = map(string)
  default     = {}
}